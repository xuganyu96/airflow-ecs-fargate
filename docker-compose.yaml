# The Airflow 2.5.0 docker-compose YAML
version: '3'

# Common settings shared across all airflow containers
x-airflow-common: &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-airflow:2.5.3-python3.10}
  build:
    context: ./
    dockerfile: Dockerfile
  environment: &airflow-common-env
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
    AIRFLOW__CORE__PARALLELISM: 10
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__DATABASE__LOAD_DEFAULT_CONNECTIONS: "false"
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__LOGGING__LOGGING_CONFIG_CLASS: "log_config.LOG_CONFIG"
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
    AIRFLOW__WEBSERVER__RELOAD_ON_PLUGIN_CHANGE: "True"
    SQLALCHEMY_SILENCE_UBER_WARNING: "1"
  volumes:
    - ./airflow_home/dags:/opt/airflow/dags
    - ./airflow_home/plugins:/opt/airflow/plugins
    - ./airflow_home/logs:/opt/airflow/logs
    - ./airflow_home/config:/opt/airflow/config
    - ./airflow_home/webserver_config.py:/opt/airflow/webserver_config.py
  depends_on: &airflow-common-depends-on
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:11
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 15
      start_period: 60s
    restart: always

  airflow-init:
    <<: *airflow-common
    command: db init
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    depends_on:
      <<: *airflow-common-depends-on
    restart: on-failure:10

  airflow-webserver:
    <<: *airflow-common
    command: webserver --debug
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully
